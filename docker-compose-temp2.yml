version: '3.8'

services:
  amazon_images_get_asin:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: amazon_images_get_asin-container
    
    ports:
      - "127.0.0.1:7999:8000"
      # - "172.17.0.1:7999:8000"
    
    # 使用 root 用户运行，确保对挂载目录有写权限
    user: "0:0"
    
    # 环境变量配置
    environment:
      - NODE_ENV=production
      - PORT=8000
      - HOST=0.0.0.0
    
    # 数据卷挂载
    volumes:
      # 持久化日志文件 - 映射到宿主机的日志目录
      - /data/apps/amazon_images_get_asin/logs:/app/logs
      # 持久化临时文件目录 - 用于存储截图等临时文件
      - /data/apps/amazon_images_get_asin/temp:/app/temp
    
    # 重启策略：除非手动停止，否则总是重启
    restart: unless-stopped
    
    # 健康检查配置
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s      # 每30秒检查一次
      timeout: 10s       # 超时时间10秒
      retries: 3         # 失败重试3次
      start_period: 40s  # 启动后40秒开始健康检查
    
    # 网络配置
    networks:
      - amazon-app-network
    
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "10m"     # 单个日志文件最大10MB
        max-file: "3"       # 保留最多3个日志文件
        compress: "true"    # 压缩旧日志文件

# 自定义网络
networks:
  amazon-app-network:
    driver: bridge
    name: amazon-app-network

# volumes:
#   app-logs:
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: /data/apps/amazon_images_get_asin/logs
#   app-temp:
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: /data/apps/amazon_images_get_asin/temp
